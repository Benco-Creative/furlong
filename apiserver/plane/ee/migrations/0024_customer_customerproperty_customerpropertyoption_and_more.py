# Generated by Django 4.2.18 on 2025-01-31 07:54

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("ee", "0023_alter_importjob_status_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.JSONField(blank=True, null=True)),
                ("description_html", models.TextField(blank=True, null=True)),
                ("description_stripped", models.TextField(blank=True, null=True)),
                ("description_binary", models.BinaryField(null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("website_url", models.URLField(blank=True, null=True)),
                ("logo_props", models.JSONField(blank=True, default=dict)),
                ("domain", models.CharField(blank=True, max_length=255, null=True)),
                ("employees", models.IntegerField(blank=True, null=True)),
                ("stage", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "contract_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("revenue", models.CharField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customers",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
                "db_table": "customers",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CustomerProperty",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("display_name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("logo_props", models.JSONField(blank=True, default=dict)),
                ("sort_order", models.FloatField(default=65535)),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("TEXT", "Text"),
                            ("DATETIME", "Datetime"),
                            ("DECIMAL", "Decimal"),
                            ("BOOLEAN", "Boolean"),
                            ("OPTION", "Option"),
                            ("RELATION", "Relation"),
                            ("URL", "URL"),
                            ("EMAIL", "Email"),
                            ("FILE", "File"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "relation_type",
                    models.CharField(
                        blank=True,
                        choices=[("ISSUE", "Issue"), ("USER", "User")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("is_required", models.BooleanField(default=False)),
                (
                    "default_value",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("settings", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("is_multi", models.BooleanField(default=False)),
                ("validation_rules", models.JSONField(blank=True, default=dict)),
                (
                    "external_source",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_property",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Property",
                "verbose_name_plural": "Customer Properties",
                "db_table": "customer_properties",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="CustomerPropertyOption",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("sort_order", models.FloatField(default=65535)),
                ("description", models.TextField(blank=True)),
                ("logo_props", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("is_default", models.BooleanField(default=False)),
                (
                    "external_source",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="ee.customerpropertyoption",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="ee.customerproperty",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_property_option",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Property Option",
                "verbose_name_plural": "Customer Property Options",
                "db_table": "customer_property_options",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="CustomerRequest",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.JSONField(blank=True, null=True)),
                ("description_html", models.TextField(blank=True, null=True)),
                ("description_stripped", models.TextField(blank=True, null=True)),
                ("description_binary", models.BinaryField(null=True)),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="ee.customer",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_requests",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Request",
                "verbose_name_plural": "Customer Requests",
                "db_table": "customer_requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.RenameModel(
            old_name="WorkflowActivity",
            new_name="WorkflowTransitionActivity",
        ),
        migrations.RenameModel(
            old_name="WorkflowApproval",
            new_name="WorkflowTransitionApproval",
        ),
        migrations.RenameModel(
            old_name="WorkflowApprover",
            new_name="WorkflowTransitionApprover",
        ),
        migrations.AlterModelOptions(
            name="workflowtransitionactivity",
            options={
                "ordering": ("-created_at",),
                "verbose_name": "Workflow Transition Activity",
                "verbose_name_plural": "Workflow Transition Activities",
            },
        ),
        migrations.AlterModelOptions(
            name="workflowtransitionapproval",
            options={
                "verbose_name": "Workflow Transition Approval",
                "verbose_name_plural": "Workflow Transition Approvals",
            },
        ),
        migrations.AlterModelOptions(
            name="workflowtransitionapprover",
            options={
                "verbose_name": "Workflow Transition Approver",
                "verbose_name_plural": "Workflow Transition Approvers",
            },
        ),
        migrations.RemoveField(
            model_name="workflowtransition",
            name="approval_state",
        ),
        migrations.RemoveField(
            model_name="workflowtransition",
            name="type",
        ),
        migrations.AddField(
            model_name="entityupdates",
            name="description_html",
            field=models.TextField(blank=True, default="<p></p>"),
        ),
        migrations.AddField(
            model_name="workspacefeature",
            name="is_customer_enabled",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterModelTable(
            name="workflowtransitionactivity",
            table="workflow_transition_activities",
        ),
        migrations.AlterModelTable(
            name="workflowtransitionapproval",
            table="workflow_transition_approvals",
        ),
        migrations.AlterModelTable(
            name="workflowtransitionapprover",
            table="workflow_transition_approvers",
        ),
        migrations.CreateModel(
            name="CustomerRequestIssue",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_request_issues",
                        to="ee.customer",
                    ),
                ),
                (
                    "customer_request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_request_issues",
                        to="ee.customerrequest",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_request_issues",
                        to="db.issue",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_request_issues",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Request Issue",
                "verbose_name_plural": "Customer Issues",
                "db_table": "customer_request_issues",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="CustomerPropertyValue",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("value_text", models.TextField(blank=True)),
                ("value_boolean", models.BooleanField(default=False)),
                ("value_decimal", models.FloatField(default=0)),
                ("value_datetime", models.DateTimeField(blank=True, null=True)),
                ("value_uuid", models.UUIDField(blank=True, null=True)),
                (
                    "external_source",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="properties",
                        to="ee.customer",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="ee.customerproperty",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "value_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="property_values",
                        to="ee.customerpropertyoption",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_property_value",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Property Value",
                "verbose_name_plural": "Customer Property Values",
                "db_table": "customer_property_values",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddConstraint(
            model_name="customerpropertyoption",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("name", "property"),
                name="customer_property_option_unique_name_project_when_deleted_at_null",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customerpropertyoption",
            unique_together={("name", "property", "deleted_at")},
        ),
        migrations.AddConstraint(
            model_name="customerproperty",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("name", "workspace"),
                name="customer_property_unique_name_project_when_deleted_at_null",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customerproperty",
            unique_together={("name", "workspace", "deleted_at")},
        ),
        migrations.AddConstraint(
            model_name="customer",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("name", "workspace"),
                name="customer_unique_name_workspace_when_deleted_at_null",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customer",
            unique_together={("name", "workspace", "deleted_at")},
        ),
        migrations.AddField(
            model_name="workspacecredential",
            name="source_auth_email",
            field=models.EmailField(blank=True, null=True),
        ),
    ]
