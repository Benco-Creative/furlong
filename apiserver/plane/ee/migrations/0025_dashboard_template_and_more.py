# Generated by Django 4.2.18 on 2025-02-27 14:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('db', '0092_alter_deprecateddashboardwidget_unique_together_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ee', '0024_customer_customerproperty_customerpropertyoption_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('filters', models.JSONField(default=dict)),
                ('logo_props', models.JSONField(default=dict)),
                ('access', models.PositiveSmallIntegerField(choices=[(0, 'Private'), (1, 'Public')], default=1)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('owned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard', to='db.workspace')),
            ],
            options={
                'verbose_name': 'Dashboard',
                'verbose_name_plural': 'Dashboards',
                'db_table': 'dashboards',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.JSONField(blank=True, default=dict)),
                ('description_html', models.TextField(blank=True, default='<p></p>')),
                ('description_stripped', models.TextField(blank=True, null=True)),
                ('description_binary', models.BinaryField(null=True)),
                ('template_type', models.CharField(default='workitem', max_length=30, verbose_name='Template Type')),
                ('is_published', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('categories', models.JSONField(default=dict)),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('supported_languages', models.JSONField(default=dict)),
                ('support', models.JSONField(default=dict)),
                ('resources', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_%(class)s', to='db.project')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_%(class)s', to='db.workspace')),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
                'db_table': 'templates',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='workflowtransitionactivity',
            name='transition_state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_activities', to='db.state'),
        ),
        migrations.AddField(
            model_name='workspaceconnection',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deleted_workspace_connections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='workflowtransitionactivity',
            name='workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflow_activities', to='ee.workflow'),
        ),
        migrations.CreateModel(
            name='WorkitemTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.JSONField(blank=True, default=dict)),
                ('description_html', models.TextField(blank=True, default='<p></p>')),
                ('description_stripped', models.TextField(blank=True, null=True)),
                ('description_binary', models.BinaryField(null=True)),
                ('priority', models.CharField(choices=[('urgent', 'Urgent'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('none', 'None')], default='none', max_length=30, verbose_name='Issue Priority')),
                ('parent', models.JSONField(default=dict)),
                ('state', models.JSONField(default=dict)),
                ('assignees', models.JSONField(default=dict)),
                ('labels', models.JSONField(default=dict)),
                ('type', models.JSONField(default=dict)),
                ('modules', models.JSONField(default=dict)),
                ('properties', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_%(class)s', to='db.project')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workitem_templates', to='ee.template')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_%(class)s', to='db.workspace')),
            ],
            options={
                'verbose_name': 'Workitem Template',
                'verbose_name_plural': 'Workitem Templates',
                'db_table': 'workitem_templates',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('chart_type', models.CharField(max_length=255)),
                ('chart_model', models.CharField(max_length=255)),
                ('config', models.JSONField(default=dict)),
                ('x_axis_property', models.CharField(blank=True, max_length=255, null=True)),
                ('x_axis_date_grouping', models.CharField(blank=True, max_length=255, null=True)),
                ('y_axis_metric', models.CharField(blank=True, max_length=255, null=True)),
                ('group_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='db.workspace')),
            ],
            options={
                'verbose_name': 'Widget',
                'verbose_name_plural': 'Widgets',
                'db_table': 'widgets',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('filters', models.JSONField(default=dict)),
                ('height', models.PositiveIntegerField(default=1)),
                ('width', models.PositiveIntegerField(default=1)),
                ('x_axis_coord', models.PositiveIntegerField(default=0)),
                ('y_axis_coord', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to='ee.dashboard')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to='ee.widget')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to='db.workspace')),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'db_table': 'dashboard_widgets',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='DashboardQuickFilter',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('filters', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_filters', to='ee.dashboard')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_filters', to='db.workspace')),
            ],
            options={
                'verbose_name': 'Dashboard Quick Filter',
                'verbose_name_plural': 'Dashboard Quick Filters',
                'db_table': 'dashboard_quick_filters',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='DashboardProject',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_projects', to='ee.dashboard')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_%(class)s', to='db.project')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_%(class)s', to='db.workspace')),
            ],
            options={
                'verbose_name': 'Dashboard Project',
                'verbose_name_plural': 'Dashboard Projects',
                'db_table': 'dashboard_projects',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddConstraint(
            model_name='dashboardwidget',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('dashboard', 'widget'), name='dashboard_widget_unique_dashboard_widget_when_deleted_at_null'),
        ),
        migrations.AlterUniqueTogether(
            name='dashboardwidget',
            unique_together={('dashboard', 'widget', 'deleted_at')},
        ),
        migrations.AddConstraint(
            model_name='dashboardquickfilter',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('dashboard', 'filters'), name='dashboard_quick_filter_unique_dashboard_quick_filter_when_deleted_at_null'),
        ),
        migrations.AlterUniqueTogether(
            name='dashboardquickfilter',
            unique_together={('dashboard', 'filters', 'deleted_at')},
        ),
        migrations.AddConstraint(
            model_name='dashboardproject',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('dashboard', 'project'), name='dashboard_project_unique_dashboard_project_when_deleted_at_null'),
        ),
        migrations.AlterUniqueTogether(
            name='dashboardproject',
            unique_together={('dashboard', 'project', 'deleted_at')},
        ),
        migrations.AddField(
            model_name='customer',
            name='logo_asset',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db.fileasset'),
        ),
    ]
