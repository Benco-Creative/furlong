# Generated by Django 4.2.22 on 2025-08-12 09:56

from django.conf import settings
import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("db", "0100_profile_has_marketing_email_consent_and_more"),
        ("ee", "0043_workspacefeature_is_pi_enabled_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Automation",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable automation name", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Automation description"),
                ),
                (
                    "scope",
                    models.CharField(
                        help_text="The scope defines on what entity this automation runs on (e.g., WorkItem, Cycle, Module)",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("disabled", "Disabled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=False, help_text="Whether automation is active"
                    ),
                ),
                (
                    "run_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Total number of executions"
                    ),
                ),
                ("last_run_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Automation",
                "verbose_name_plural": "Automations",
                "db_table": "automations",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="AutomationActivity",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "verb",
                    models.CharField(
                        default="created", max_length=255, verbose_name="Action"
                    ),
                ),
                (
                    "field",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Field Name"
                    ),
                ),
                (
                    "old_value",
                    models.TextField(blank=True, null=True, verbose_name="Old Value"),
                ),
                (
                    "new_value",
                    models.TextField(blank=True, null=True, verbose_name="New Value"),
                ),
                ("old_identifier", models.UUIDField(null=True)),
                ("new_identifier", models.UUIDField(null=True)),
                ("epoch", models.FloatField(null=True)),
            ],
            options={
                "verbose_name": "Automation Activity",
                "verbose_name_plural": "Automation Activities",
                "db_table": "automation_activities",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="AutomationEdge",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "execution_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order for evaluation when multiple edges from same node",
                    ),
                ),
            ],
            options={
                "verbose_name": "Automation Edge",
                "verbose_name_plural": "Automation Edges",
                "db_table": "automation_edges",
                "ordering": ("execution_order", "created_at"),
            },
        ),
        migrations.CreateModel(
            name="AutomationNode",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for the node", max_length=255
                    ),
                ),
                (
                    "node_type",
                    models.CharField(
                        choices=[
                            ("trigger", "Trigger"),
                            ("action", "Action"),
                            ("condition", "Condition"),
                        ],
                        help_text="Type of node: trigger, action, or condition",
                        max_length=20,
                    ),
                ),
                (
                    "handler_name",
                    models.CharField(
                        help_text="Name of the handler class (e.g., 'record_created', 'send_email')",
                        max_length=100,
                    ),
                ),
                (
                    "config",
                    models.JSONField(
                        default=dict,
                        help_text="Node-specific configuration and parameters",
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Automation Node",
                "verbose_name_plural": "Automation Nodes",
                "db_table": "automation_nodes",
                "ordering": ("created_at",),
            },
        ),
        migrations.CreateModel(
            name="AutomationRun",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "trigger_event",
                    models.JSONField(
                        default=dict,
                        help_text="The event that triggered this automation run",
                    ),
                ),
                (
                    "trigger_source",
                    models.CharField(
                        blank=True,
                        help_text="Source of the trigger (e.g., 'webhook', 'database', 'manual')",
                        max_length=100,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "result",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Overall result and summary of the automation run",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if the run failed"
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        blank=True,
                        help_text="Source entity type (e.g., 'issue', 'page', 'project', 'workspace')",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "verbose_name": "Automation Run",
                "verbose_name_plural": "Automation Runs",
                "db_table": "automation_runs",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="AutomationVersion",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "version_number",
                    models.PositiveIntegerField(help_text="Sequential version number"),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "configuration",
                    models.JSONField(
                        default=dict,
                        help_text="Complete automation configuration including nodes and edges",
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Automation Version",
                "verbose_name_plural": "Automation Versions",
                "db_table": "automation_versions",
                "ordering": ("-version_number",),
            },
        ),
        migrations.CreateModel(
            name="NodeExecution",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "input_data",
                    models.JSONField(
                        default=dict, help_text="Input data provided to the node"
                    ),
                ),
                (
                    "output_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Output data produced by the node",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if node execution failed"
                    ),
                ),
                (
                    "retry_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this node execution was retried",
                        validators=[django.core.validators.MaxValueValidator(5)],
                    ),
                ),
                (
                    "execution_context",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional context about the execution environment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Node Execution",
                "verbose_name_plural": "Node Executions",
                "db_table": "node_executions",
                "ordering": ("created_at",),
            },
        ),
        migrations.CreateModel(
            name="ProcessedAutomationEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_id",
                    models.UUIDField(
                        help_text="Unique identifier from the outbox event", unique=True
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        help_text="Type of event (e.g., 'issue.created', 'issue.updated')",
                        max_length=255,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        help_text="Current processing status of the event",
                        max_length=20,
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True,
                        help_text="Celery task ID if event was dispatched to background processing",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, help_text="When processing started", null=True
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="When processing completed", null=True
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if processing failed"
                    ),
                ),
                (
                    "retry_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of times processing was retried"
                    ),
                ),
                ("workspace_id", models.UUIDField(null=True)),
                ("project_id", models.UUIDField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Processed Automation Event",
                "verbose_name_plural": "Processed Automation Events",
                "db_table": "processed_automation_events",
                "ordering": ("-created_at",),
                "indexes": [
                    models.Index(fields=["event_id"], name="proc_evt_event_id_idx"),
                    models.Index(
                        fields=["status", "created_at"], name="proc_evt_status_idx"
                    ),
                    models.Index(
                        fields=["event_type", "status"], name="proc_evt_type_status_idx"
                    ),
                    models.Index(fields=["task_id"], name="proc_evt_task_id_idx"),
                    models.Index(
                        condition=models.Q(
                            ("status__in", ["processing", "completed", "failed"])
                        ),
                        fields=["status", "started_at"],
                        name="proc_evt_perf_idx",
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="processedautomationevent",
            constraint=models.UniqueConstraint(
                fields=("event_id",), name="processed_event_unique_event_id"
            ),
        ),
        migrations.AddField(
            model_name="nodeexecution",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="nodeexecution",
            name="node",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="executions",
                to="ee.automationnode",
            ),
        ),
        migrations.AddField(
            model_name="nodeexecution",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="db.project",
            ),
        ),
        migrations.AddField(
            model_name="nodeexecution",
            name="run",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="node_executions",
                to="ee.automationrun",
            ),
        ),
        migrations.AddField(
            model_name="nodeexecution",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="nodeexecution",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="db.workspace",
            ),
        ),
        migrations.AddField(
            model_name="automationversion",
            name="automation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="versions",
                to="ee.automation",
            ),
        ),
        migrations.AddField(
            model_name="automationversion",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="automationversion",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="db.project",
            ),
        ),
        migrations.AddField(
            model_name="automationversion",
            name="published_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="published_automation_versions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="automationversion",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="automationversion",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="db.workspace",
            ),
        ),
        migrations.AddField(
            model_name="automationrun",
            name="automation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="runs",
                to="ee.automation",
            ),
        ),
        migrations.AddField(
            model_name="automationrun",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="automationrun",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="db.project",
            ),
        ),
        migrations.AddField(
            model_name="automationrun",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="automationrun",
            name="version",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="runs",
                to="ee.automationversion",
            ),
        ),
        migrations.AddField(
            model_name="automationrun",
            name="work_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="automation_runs",
                to="db.issue",
            ),
        ),
        migrations.AddField(
            model_name="automationrun",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="db.workspace",
            ),
        ),
        migrations.AddField(
            model_name="automationnode",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="automationnode",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="db.project",
            ),
        ),
        migrations.AddField(
            model_name="automationnode",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="automationnode",
            name="version",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="nodes",
                to="ee.automationversion",
            ),
        ),
        migrations.AddField(
            model_name="automationnode",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="db.workspace",
            ),
        ),
        migrations.AddField(
            model_name="automationedge",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="automationedge",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="db.project",
            ),
        ),
        migrations.AddField(
            model_name="automationedge",
            name="source_node",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="outgoing_edges",
                to="ee.automationnode",
            ),
        ),
        migrations.AddField(
            model_name="automationedge",
            name="target_node",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="incoming_edges",
                to="ee.automationnode",
            ),
        ),
        migrations.AddField(
            model_name="automationedge",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="automationedge",
            name="version",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="edges",
                to="ee.automationversion",
            ),
        ),
        migrations.AddField(
            model_name="automationedge",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="db.workspace",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="actor",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="automation_activities",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="automation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activities",
                to="ee.automation",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="automation_edge",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activities",
                to="ee.automationedge",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="automation_node",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activities",
                to="ee.automationnode",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="automation_run",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activities",
                to="ee.automationrun",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="automation_version",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activities",
                to="ee.automationversion",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="node_execution",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activities",
                to="ee.nodeexecution",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="db.project",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="automationactivity",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="db.workspace",
            ),
        ),
        migrations.AddField(
            model_name="automation",
            name="bot_user",
            field=models.OneToOneField(
                blank=True,
                help_text="The bot user for this automation",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="bot_automation",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="automation",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="automation",
            name="current_version",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="automation_current",
                to="ee.automationversion",
            ),
        ),
        migrations.AddField(
            model_name="automation",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="db.project",
            ),
        ),
        migrations.AddField(
            model_name="automation",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="automation",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="db.workspace",
            ),
        ),
        migrations.AddIndex(
            model_name="nodeexecution",
            index=models.Index(
                fields=["run", "status"], name="node_execut_run_id_dea537_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="nodeexecution",
            index=models.Index(
                fields=["run", "created_at"], name="node_execut_run_id_655e41_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="nodeexecution",
            index=models.Index(
                fields=["node", "status"], name="node_execut_node_id_070382_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="nodeexecution",
            index=models.Index(
                fields=["status", "started_at"], name="node_execut_status_ded0e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="nodeexecution",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["input_data"],
                name="nodeexec_in_gin",
                opclasses=["jsonb_path_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="nodeexecution",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["output_data"],
                name="nodeexec_out_gin",
                opclasses=["jsonb_path_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="nodeexecution",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["execution_context"],
                name="nodeexec_ctx_gin",
                opclasses=["jsonb_path_ops"],
            ),
        ),
        migrations.AddConstraint(
            model_name="nodeexecution",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("run", "node"),
                name="node_execution_unique_run_node",
            ),
        ),
        migrations.AddIndex(
            model_name="automationversion",
            index=models.Index(
                fields=["automation", "version_number"],
                name="automation__automat_88d571_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="automationversion",
            index=models.Index(
                fields=["is_published", "published_at"],
                name="automation__is_publ_04b04e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="automationversion",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["configuration"],
                name="autover_cfg_gin",
                opclasses=["jsonb_path_ops"],
            ),
        ),
        migrations.AddConstraint(
            model_name="automationversion",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("automation", "version_number"),
                name="automation_version_unique_automation_version_number",
            ),
        ),
        migrations.AddIndex(
            model_name="automationrun",
            index=models.Index(
                fields=["automation", "status"], name="automation__automat_e444ab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="automationrun",
            index=models.Index(
                fields=["automation", "created_at"],
                name="automation__automat_54cac5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="automationrun",
            index=models.Index(
                fields=["version", "status"], name="automation__version_62a347_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="automationrun",
            index=models.Index(
                fields=["status", "started_at"], name="automation__status_8eac24_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="automationrun",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["trigger_event"],
                name="autorun_trig_gin",
                opclasses=["jsonb_path_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="automationrun",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["result"], name="autorun_res_gin", opclasses=["jsonb_path_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="automationnode",
            index=models.Index(
                fields=["version", "node_type"], name="automation__version_41d4b5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="automationnode",
            index=models.Index(
                fields=["handler_name"], name="automation__handler_edc259_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="automationnode",
            index=models.Index(
                condition=models.Q(("node_type", "trigger")),
                fields=["node_type"],
                name="autonode_trig_part_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="automationnode",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["config"], name="autonode_cfg_gin", opclasses=["jsonb_path_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="automationedge",
            index=models.Index(
                fields=["version", "source_node"], name="automation__version_ef2e9e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="automationedge",
            index=models.Index(
                fields=["version", "target_node"], name="automation__version_d4d356_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="automationedge",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("source_node", "target_node"),
                name="automation_edge_unique_source_target",
            ),
        ),
        migrations.AddConstraint(
            model_name="automationedge",
            constraint=models.CheckConstraint(
                check=models.Q(("source_node", models.F("target_node")), _negated=True),
                name="automation_edge_no_self_loops",
            ),
        ),
        migrations.AddIndex(
            model_name="automation",
            index=models.Index(
                fields=["workspace", "status", "is_enabled"],
                name="automations_workspa_f41b79_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="automation",
            index=models.Index(fields=["scope"], name="automations_scope_eff742_idx"),
        ),
        migrations.AddConstraint(
            model_name="automation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("project", "name"),
                name="automation_unique_project_name_when_not_deleted",
            ),
        ),
    ]
