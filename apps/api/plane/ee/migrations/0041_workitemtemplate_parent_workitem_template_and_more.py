# Generated by Django 4.2.22 on 2025-06-25 13:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("db", "0097_project_external_id_project_external_source"),
        ("ee", "0040_template_short_id_template_slug"),
        ("django_celery_beat", "0018_improve_crontab_helptext"),
    ]

    operations = [
        migrations.AddField(
            model_name="workitemtemplate",
            name="parent_workitem_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="child_workitem_templates",
                to="ee.workitemtemplate",
            ),
        ),
        migrations.AddField(
            model_name="workitemtemplate",
            name="project_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workitem_templates",
                to="ee.projecttemplate",
            ),
        ),
        migrations.AlterField(
            model_name="workitemtemplate",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workitem_templates",
                to="ee.template",
            ),
        ),
        migrations.CreateModel(
            name="RecurringWorkitemTask",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("start_at", models.DateTimeField(help_text="First allowed run (UTC)")),
                (
                    "end_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Cut-off after which no runs occur (UTC)",
                        null=True,
                    ),
                ),
                (
                    "interval_seconds",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Simple repeat interval (â‰¥ 60s). Mutually exclusive with cron_expression",
                        null=True,
                    ),
                ),
                (
                    "cron_expression",
                    models.CharField(
                        blank=True,
                        help_text="5-field standard cron. Mutually exclusive with interval_seconds",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        default=True, help_text="Toggle to pause without deletion"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "periodic_task",
                    models.OneToOneField(
                        blank=True,
                        help_text="Keeps Beat in sync with this row",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_workitem_task",
                        to="django_celery_beat.periodictask",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="db.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "workitem_blueprint",
                    models.ForeignKey(
                        help_text="Blueprint to duplicate",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_tasks",
                        to="ee.workitemtemplate",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recurring Workitem Task",
                "verbose_name_plural": "Recurring Workitem Tasks",
                "db_table": "recurring_workitem_tasks",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="RecurringWorkitemTaskLog",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        help_text="Unique per Celery execution", max_length=50
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("STARTED", "Started"),
                            ("SUCCESS", "Success"),
                            ("FAILURE", "Failure"),
                        ],
                        default="STARTED",
                        help_text="State of this execution",
                        max_length=20,
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When task began"
                    ),
                ),
                (
                    "finished_at",
                    models.DateTimeField(
                        blank=True, help_text="When task completed or failed", null=True
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Truncated exception or failure reason",
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="db.project",
                    ),
                ),
                (
                    "recurring_task",
                    models.ForeignKey(
                        help_text="Parent schedule",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="execution_logs",
                        to="ee.recurringworkitemtask",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Modified By",
                    ),
                ),
                (
                    "workitem",
                    models.ForeignKey(
                        blank=True,
                        help_text="Concrete item created on success",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_task_logs",
                        to="db.issue",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="db.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recurring Workitem Task Log",
                "verbose_name_plural": "Recurring Workitem Task Logs",
                "db_table": "recurring_workitem_task_logs",
                "ordering": ("-started_at",),
            },
        ),
    ]
